---
description: 프롬프트 뱅크 프로젝트 룰
globs: 
alwaysApply: false
---
# "프롬프트 뱅크 of 뱅가드AI경매" 프로젝트 규칙

## 1. 핵심 기술 스택
- **프레임워크:** Next.js 14 (App Router)
- **언어:** TypeScript (Strict Mode)
- **데이터베이스:** PostgreSQL with Prisma ORM
- **인증:** NextAuth.js v5 (Auth.js)
- **스타일링:** Tailwind CSS with shadcn/ui (Radix UI 기반)
- **유효성 검사:** Zod (서버 및 폼 데이터 검증용)

## 2. 핵심 아키텍처 패턴: 서버 액션 (Server Actions)
- **주요 데이터 흐름:** 클라이언트-서버 통신은 **오직 서버 액션을 통해서만** 수행됩니다. CRUD 작업을 위해 기존의 API 라우트를 생성하지 마세요.
- **서버 액션 구조:** 모든 서버 액션은 다음 순서를 반드시 따라야 합니다.
  1.  **인증 확인:** `auth()` 함수로 사용자 세션을 확인합니다.
  2.  **입력값 검증:** Zod 스키마를 사용하여 `FormData`나 인수를 파싱하고 검증합니다.
  3.  **데이터베이스 로직:** `prisma`를 사용하여 데이터베이스 작업을 수행합니다.
  4.  **캐시 무효화:** `revalidatePath()` 또는 `revalidateTag()`를 호출하여 UI를 업데이트합니다.
  5.  **반환값:** `{ success: true, data: ... }` 또는 `{ success: false, error: '...' }` 와 같은 구조화된 객체를 반환합니다.

## 3. 서버 액션을 위한 클라이언트 패턴
- **폼 제출:** 서버 액션을 클라이언트 측 비동기(async) 함수로 감싸서 호출합니다.
- **상태 관리:** `useState`를 사용하여 로딩/제출 상태를 관리합니다.
- **에러 처리:** 서버 액션 호출을 `try...catch` 블록으로 감쌉니다.
- **사용자 피드백:** `shadcn/ui`의 `toast` 컴포넌트를 사용하여 성공 또는 에러 메시지를 사용자에게 보여줍니다.

## 4. 폴더 구조
- `app/(main)/...`: 인증이 필요한 경로 (메인 애플리케이션).
- `app/auth/...`: 인증 관련 페이지.
- `app/page.tsx`: 외부 공개용 웰컴/랜딩 페이지.
- `lib/actions.ts`: 모든 서버 액션이 이곳에 중앙화됩니다.
- `lib/prisma.ts`, `lib/auth.ts`, `lib/zod.ts`: 핵심 라이브러리 파일.
- `components/features/...`: 기능별 컴포넌트 (예: `prompts`, `auth`).
- `components/ui/...`: `shadcn/ui`의 재사용 가능한 UI 컴포넌트.
- `middleware.ts`: 라우트 보호 및 세션 유효성 검사를 처리합니다.

## 5. 데이터베이스와 멀티테넌시
- **Prisma는** 데이터베이스와 상호작용하는 **유일한 방법**입니다.
- **엄격한 멀티테넌시:** `Prompt`, `Tag`와 같은 거의 모든 데이터는 사용자별로 구분되며, **반드시 `userId`와 연결되어야 합니다.** 모든 데이터베이스 쿼리는 데이터 격리를 보장하기 위해 `where: { userId: ... }` 절을 포함해야 합니다.
- **태그 시스템:** 태그는 사용자별로 고유하며, 이는 `Tag` 모델의 `@@unique([name, userId])` 제약 조건으로 강제됩니다.

## 6. UI 및 디자인 시스템
- **컴포넌트:** 모든 신규 UI는 `shadcn/ui` 컴포넌트를 기반으로 구축합니다.
- **스타일링:** Tailwind CSS 유틸리티 클래스를 직접 사용합니다.
- **디자인 원칙:** 프로젝트에 정립된 글래스모피즘(`backdrop-blur-md`, `bg-white/75`)과 브랜딩(태그의 `Lush Lava` 컬러, 그라데이션 배경)을 준수합니다.
- **반응형:** 모든 컴포넌트는 완벽하게 반응형이어야 합니다.

## 7. 프로젝트 용어
- 사용자에게 보여지는 텍스트와 주석에는 프로젝트 고유의 한국어 용어를 사용합니다.
- **Prompt Bank:** 프롬프트 뱅크
- **The Personal Vault:** 개인용 금고

- **The Educator's Tool:** 교육 및 분석 도구